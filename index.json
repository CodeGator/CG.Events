{
  "api/CG.Events.EventAggregator.html": {
    "href": "api/CG.Events.EventAggregator.html",
    "title": "Class EventAggregator",
    "keywords": "Class EventAggregator This class is a default implementation of the IEventAggregator interface. Inheritance System.Object EventAggregator Implements IEventAggregator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Events Assembly : CG.Events.dll Syntax public class EventAggregator : IEventAggregator Constructors EventAggregator() This constructor creates a new intance of the EventAggregator class Declaration public EventAggregator() EventAggregator(IServiceProvider) This constructor creates a new instance of the EventAggregator class Declaration [ActivatorUtilitiesConstructor] public EventAggregator(IServiceProvider serviceProvider) Parameters Type Name Description System.IServiceProvider serviceProvider Methods GetEvent<TEvent>() This method returns an instance of the specified event type. Declaration public virtual TEvent GetEvent<TEvent>() where TEvent : EventBase Returns Type Description TEvent An instance of the specified event. Type Parameters Name Description TEvent The type of associated event. Exceptions Type Condition EventAggregatorException This exception is thrown whenever this operation failes to produce an event. Implements IEventAggregator"
  },
  "api/CG.Events.EventAggregatorException.html": {
    "href": "api/CG.Events.EventAggregatorException.html",
    "title": "Class EventAggregatorException",
    "keywords": "Class EventAggregatorException This class represents an event aggregator related exception. Inheritance System.Object System.Exception EventAggregatorException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : CG.Events Assembly : CG.Events.dll Syntax [Serializable] public class EventAggregatorException : Exception, ISerializable Constructors EventAggregatorException() This constructor creates a new instance of the EventAggregatorException class. Declaration public EventAggregatorException() EventAggregatorException(SerializationInfo, StreamingContext) This constructor creates a new instance of the EventAggregatorException class. Declaration public EventAggregatorException(SerializationInfo info, StreamingContext context) Parameters Type Name Description System.Runtime.Serialization.SerializationInfo info The serialization info to use for the exception. System.Runtime.Serialization.StreamingContext context The streaming context to use for the exception. EventAggregatorException(String) This constructor creates a new instance of the EventAggregatorException class. Declaration public EventAggregatorException(string message) Parameters Type Name Description System.String message The message to use for the exception. EventAggregatorException(String, Exception) This constructor creates a new instance of the EventAggregatorException class. Declaration public EventAggregatorException(string message, Exception innerException) Parameters Type Name Description System.String message The message to use for the exception. System.Exception innerException An optional inner exception reference. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/CG.Events.EventSubscription.html": {
    "href": "api/CG.Events.EventSubscription.html",
    "title": "Class EventSubscription",
    "keywords": "Class EventSubscription This class is a default implementation of the IEventSubscription interface. Inheritance System.Object EventSubscription Implements IEventSubscription System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Events Assembly : CG.Events.dll Syntax public class EventSubscription : IEventSubscription, IDisposable Constructors EventSubscription(Action<Object[]>, Boolean) This constructor creates a new instance of the EventSubscription class. Declaration public EventSubscription(Action<object[]> action, bool strongReference) Parameters Type Name Description System.Action < System.Object []> action The action to associate with this subscription. System.Boolean strongReference Indicates whether to maintain a strong or weak reference to the action. Properties IsAlive This property indicates whether the target of the subscription is still alive, or not. Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean Methods Dispose() This method is called whenever the object is disposed. Declaration public void Dispose() Invoke(Object[]) This method invokes the handler for the subscription. Declaration public virtual void Invoke(params object[] args) Parameters Type Name Description System.Object [] args Optional arguments for the event. Implements IEventSubscription System.IDisposable"
  },
  "api/CG.Events.html": {
    "href": "api/CG.Events.html",
    "title": "Namespace CG.Events",
    "keywords": "Namespace CG.Events Classes EventAggregator This class is a default implementation of the IEventAggregator interface. EventAggregatorException This class represents an event aggregator related exception. EventSubscription This class is a default implementation of the IEventSubscription interface. Interfaces IEventAggregator This interface represents an object that manages event aggregation. IEventSubscription This interface represents an event subscription."
  },
  "api/CG.Events.IEventAggregator.html": {
    "href": "api/CG.Events.IEventAggregator.html",
    "title": "Interface IEventAggregator",
    "keywords": "Interface IEventAggregator This interface represents an object that manages event aggregation. Namespace : CG.Events Assembly : CG.Events.dll Syntax public interface IEventAggregator Methods GetEvent<TEvent>() This method returns an instance of the specified event type. Declaration TEvent GetEvent<TEvent>() where TEvent : EventBase Returns Type Description TEvent An instance of the specified event. Type Parameters Name Description TEvent The type of associated event. Exceptions Type Condition EventAggregatorException This exception is thrown whenever this operation failes to produce an event."
  },
  "api/CG.Events.IEventSubscription.html": {
    "href": "api/CG.Events.IEventSubscription.html",
    "title": "Interface IEventSubscription",
    "keywords": "Interface IEventSubscription This interface represents an event subscription. Inherited Members System.IDisposable.Dispose() Namespace : CG.Events Assembly : CG.Events.dll Syntax public interface IEventSubscription : IDisposable Properties IsAlive This property indicates whether the target of the subscription is still alive, or not. Declaration bool IsAlive { get; } Property Value Type Description System.Boolean Methods Invoke(Object[]) This method invokes the handler for the subscription. Declaration void Invoke(params object[] args) Parameters Type Name Description System.Object [] args Optional arguments for the event."
  },
  "api/CG.Events.Models.EventBase.html": {
    "href": "api/CG.Events.Models.EventBase.html",
    "title": "Class EventBase",
    "keywords": "Class EventBase This class is a base implementation of an IEventAggregator event. Inheritance System.Object EventBase Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Events.Models Assembly : CG.Events.dll Syntax public abstract class EventBase Constructors EventBase() This class creates a new instance of the EventBase class. Declaration protected EventBase() Fields _subscriptions This field contains a list of event subscriptions. Declaration protected readonly IList<IEventSubscription> _subscriptions Field Value Type Description System.Collections.Generic.IList < IEventSubscription > _sync This field contains a synchronization object. Declaration protected readonly object _sync Field Value Type Description System.Object Methods OnInvoke(Object[]) This method may be called, by the event aggregator, by subscribing to an event using the overload that doesn't accept an System.Action parameter. When the Publish(Object[]) method is called on that event, the aggregator will call this method. Declaration protected virtual void OnInvoke(params object[] args) Parameters Type Name Description System.Object [] args Optional arguments for the event. Publish(Object[]) This method publishes the event to all current subscribers. Declaration public virtual void Publish(params object[] args) Parameters Type Name Description System.Object [] args Optional arguments for the event. Exceptions Type Condition System.AggregateException This exception is thrown whenever one or more errors are detected whil publishing. PublishAsync(Object[]) This method publishes the event to all current subscribers. Declaration public virtual Task PublishAsync(params object[] args) Parameters Type Name Description System.Object [] args Optional arguments for the event. Returns Type Description System.Threading.Tasks.Task Exceptions Type Condition System.AggregateException This exception is thrown whenever one or more errors are detected whil publishing. Subscribe(Action<Object[]>, Boolean) This method subscribes to an event using the specified delegate. That delegate is then called by the event whenever the Publish(Object[]) method is called. Declaration public virtual IDisposable Subscribe(Action<object[]> action, bool strongReference = false) Parameters Type Name Description System.Action < System.Object []> action The delegate to use for the subscription. System.Boolean strongReference Indicates whether to maintain a strong or weak reference to the action. Returns Type Description System.IDisposable Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments are missing, or invalid. Subscribe(Boolean) This method subscribes to an event. When the Publish(Object[]) method is then called on that event, the event's OnInvoke(Object[]) method is then called. Declaration public virtual IDisposable Subscribe(bool strongReference = false) Parameters Type Name Description System.Boolean strongReference Returns Type Description System.IDisposable Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments are missing, or invalid. Unsubscribe(IDisposable) This method removes a subscription from the event aggregator. Declaration public virtual void Unsubscribe(IDisposable subscription) Parameters Type Name Description System.IDisposable subscription The subscription to use for the operation. Exceptions Type Condition System.ArgumentException This exception is thrown whenever one or more arguments are missing, or invalid."
  },
  "api/CG.Events.Models.html": {
    "href": "api/CG.Events.Models.html",
    "title": "Namespace CG.Events.Models",
    "keywords": "Namespace CG.Events.Models Classes EventBase This class is a base implementation of an IEventAggregator event."
  },
  "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Events.dll Syntax public static class ApplicationBuilderExtensions Methods UseEventAggregator(IApplicationBuilder, IHostEnvironment) This method runs any startup logic required by the event aggregator. Declaration public static IApplicationBuilder UseEventAggregator(this IApplicationBuilder applicationBuilder, IHostEnvironment hostEnvironment) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the oepration. Microsoft.Extensions.Hosting.IHostEnvironment hostEnvironment The host environment to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Events.dll Syntax public static class ServiceCollectionExtensions Methods AddEventAggregation(IServiceCollection) This method registers the services required to support event aggregation. Declaration public static IServiceCollection AddEventAggregation(this IServiceCollection serviceCollection) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection the value of the serviceCollection parameter. for chaining calls together."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Events.dll contains a lightweight event aggregator used by other CodeGator packages."
  }
}